from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
import requests
import xml.etree.ElementTree as ET

HTTP = HTTPRemoteProvider()
YEARS=[*range(1998, 2021)]


def parse_metadata(input, output):
    root = ET.parse(input)

    urls = root.findall("./dataset/dataTable/physical/distribution/online/url")
    filenames = root.findall("./dataset/dataTable/entityName")

    file_pairs = {filenames[i].text[:4]: urls[i].text for i in range(len(urls))}

    yr = output[5:9]
    open(output, "w+").write(file_pairs[yr])


rule all:
    input:
        "plots/temperature.png"


rule metadata:
    input: HTTP.remote("https://arcticdata.io/metacat/d1/mn/v2/object/urn%3Auuid%3A0b0a5a34-a950-4685-a6d1-76714116ac82", keep_local = True)
    output: "metadata.xml"
    run:
        outputName = "metadata.xml"
        shell("mv {input} {outputName}")


rule parse:
    input: "metadata.xml"    
    output: path=expand("urls/{year}.txt", year = YEARS)
    run: 
        for p in output.path:
            parse_metadata(input[0], p)

rule download:
    input: "urls/{year}.txt"    
    output: "data/{year}.csv"
    run: 
        lines = open(input[0]).read()
        resp = requests.get(lines)
        open(output[0], "wb+").write(resp.content)

rule summarize:
    input:
       expand("data/{year}.csv", year=YEARS)
    output:
        "data_combined/full_climate.csv"
    script:
        "scripts/summarize.py"

rule plot:
    input:
       "data_combined/full_climate.csv"
    output:
        "plots/temperature.png"
    script:
        "scripts/plot.py"